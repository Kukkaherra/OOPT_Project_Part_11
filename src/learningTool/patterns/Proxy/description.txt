“The Proxy Pattern provides a surrogate or placeholder for another object to control access to it.”

Proxy Patterns are used to create instance objects controlling access to other objects. Proxy Pattern consists of a subject interface, the real subject, and the proxy. The subject interface is an interface which is implemented by both the real subject and the proxy. The real subject is an object and it is interacted with through the proxy. The proxy controls also the access to the real subject. 

The typical Proxy Pattern use cases are a remote proxy, a virtual proxy, and a protection proxy. The remote proxy is not in the same system as the real subject is and the methods are called and invoked remotely. The virtual proxy is used when the real subject is too expensive to create and often handles the requests until the real subject has been created. The protection proxy controls access to the real subject based on access rights.
